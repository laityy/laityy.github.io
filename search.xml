<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git版本控制系统</title>
      <link href="/posts/1990.html"/>
      <url>/posts/1990.html</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h3><p> git是一个开源式的分布式版本控制系统，与之相对应的集中式版本控制系统主要有CVS(最早，开源)，SVN(使用最多，开源)，VSS(集成在visual studio中)…分布式主要有git，Mercurial，Monotone…</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用工具</title>
      <link href="/posts/64490.html"/>
      <url>/posts/64490.html</url>
      
        <content type="html"><![CDATA[<h2 id="主要介绍一些学习中可能使用的实用工具"><a href="#主要介绍一些学习中可能使用的实用工具" class="headerlink" title="主要介绍一些学习中可能使用的实用工具"></a>主要介绍一些学习中可能使用的实用工具</h2><h3 id="文档转换"><a href="#文档转换" class="headerlink" title="文档转换"></a>文档转换</h3><ol><li><a href="https://smallpdf.com/cn" target="_blank" rel="noopener">轻松玩转pdf</a></li></ol><ul><li>pdf文档的转换和编辑加密等</li></ul><ol start="2"><li><a href="https://www.cleverpdf.com/cn" target="_blank" rel="noopener">CleverPDF</a></li></ol><ul><li>27个强大的PDF在线工具，完全免费！</li></ul><ol start="3"><li><a href="https://www.processon.com/" target="_blank" rel="noopener">ProcessOn</a></li></ol><ul><li>免费支持在线作图，实时协作。支持流程图，思维导图，原型图，UML，网络拓扑图，组织结构图等</li></ul><ol start="4"><li><a href="http://www.alltoall.net/" target="_blank" rel="noopener">ALL TO ALL</a></li></ol><ul><li>国内最全类型的在线文件转换平台，免费，快速</li></ul><ol start="5"><li><a href="https://cn.office-converter.com/" target="_blank" rel="noopener">Office-conver</a></li></ol><ul><li>支持各种文件类型的转换，如视频，音频，图片，电子书等多种文件格式</li></ul><ol start="6"><li><a href="https://www.wdku.net/" target="_blank" rel="noopener">SuperTools</a></li></ol><ul><li>同样提供一些文档格式的转换，支持在线文字识别转换</li></ul><ol start="7"><li><a href="https://lightpdf.com/zh/" target="_blank" rel="noopener">LightPDF</a></li></ol><ul><li>简单快捷，一键解决pdf所以pdf编辑问题</li></ul><h3 id="图片素材类"><a href="#图片素材类" class="headerlink" title="图片素材类"></a>图片素材类</h3><ol><li><a href="https://wallhaven.cc/" target="_blank" rel="noopener">wallhaven</a></li></ol><ul><li>适合选取图片做壁纸的网站，全是超高分辨率图片</li></ul><ol start="2"><li><a href="https://pixabay.com/" target="_blank" rel="noopener">pixabay</a></li></ol><ul><li>素材类网站，包括各种视频素材，插画，矢量图等</li></ul><ol start="3"><li><a href="https://unsplash.com/" target="_blank" rel="noopener">unsplash</a></li></ol><ul><li>网站里面提供摄影图片素材，不管你是做网页还是做PPT都可以使用，并且每一个图片素材分辨率都非常高，保管够用！</li></ul><ol start="4"><li><a href="http://www.designerspics.com/" target="_blank" rel="noopener">DesignersPics.com</a></li></ol><ul><li>提供个人和商业使用的免费高清图片，不需要归属</li></ul><ol start="5"><li><a href="https://gratisography.com/" target="_blank" rel="noopener">Gratisography</a></li></ol><ul><li>同样是高清免费图片素材网站，图片版权完全自由</li></ul><h3 id="图片编辑类"><a href="#图片编辑类" class="headerlink" title="图片编辑类"></a>图片编辑类</h3><ol><li><a href="https://tinypng.com/" target="_blank" rel="noopener">TinyPng</a></li></ol><ul><li>用于图片压缩，图片最大不超过5M，图片数量不超过20张</li></ul><ol start="2"><li><a href="https://www.iloveimg.com/zh-cn" target="_blank" rel="noopener">iloveimg</a></li></ol><ul><li>可以进行图片的压缩，尺寸调整，裁剪，图片生成器等</li></ul><ol start="3"><li><a href="http://www.uugai.com/" target="_blank" rel="noopener">U钙网</a></li></ol><ul><li>完全免费的LOGO在线设计制作工具</li></ul><ol start="4"><li><a href="http://waifu2x.udp.jp/" target="_blank" rel="noopener">waifu2x</a></li></ol><ul><li>支持多种语言显示，使用卷积神经网络对动漫风格的图片进行放大操作（支持照片）</li></ul><ol start="5"><li><a href="https://docsmall.com/" target="_blank" rel="noopener">docsmall</a></li></ol><ul><li>用于压缩文件的网站，网页简介大方，支持图片，GIF，PDF等的压缩和PDF合并。</li></ul><h3 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h3><ol><li><a href="https://www.sojson.com" target="_blank" rel="noopener">sojson在线解析</a></li></ol><p>超级厉害的网站，包含所有前后端可能会用到的工具，还有很多实用的生活工具如区号查询，车辆违章查询等</p><ol start="2"><li><a href="http://code.giffox.com/" target="_blank" rel="noopener">GIFFOX</a></li></ol><p>整合了有关于程序员的实用工具，比如在线编程教程，程序员社区，开发工具，技术博客等</p><ol start="3"><li><a href="https://tool.lu/" target="_blank" rel="noopener">在线工具</a></li></ol><p>程序猿实用的在线网站，看图你就知道啦</p><h3 id="音乐免费下载"><a href="#音乐免费下载" class="headerlink" title="音乐免费下载"></a>音乐免费下载</h3><ol><li><a href="http://y.webzcz.cn/" target="_blank" rel="noopener">FreeMusic</a></li></ol><p>免费听一些全网比较火的歌</p><ol start="2"><li><a href="https://music.ghpym.com/" target="_blank" rel="noopener">果核音乐搜搜</a></li></ol><p>能够解析qq 网易云 酷狗歌曲和歌单，并可以下载</p><ol start="3"><li><a href="https://music.qugeek.com/" target="_blank" rel="noopener">墨灵音乐</a></li></ol><p>可以在线听音乐，听FM电台节目等</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>传输层TCP/UDP协议</title>
      <link href="/posts/34721.html"/>
      <url>/posts/34721.html</url>
      
        <content type="html"><![CDATA[<h2 id="传输层协议UDP-TCP"><a href="#传输层协议UDP-TCP" class="headerlink" title="传输层协议UDP/TCP"></a>传输层协议UDP/TCP</h2><h3 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h3><h4 id="1-特点"><a href="#1-特点" class="headerlink" title="1. 特点:"></a>1. 特点:</h4><ul><li>无连接，尽最大努力交付   </li><li>不保证可靠交付，面向报文（对应用层报文长度不做修改，全部发送给网络层，即一次发送一个完整的报文，就可能需要网络层需要分片，适合一次传输少量数据）</li><li>没有拥塞控制（允许丢弃部分数据）即保证实时性</li><li>首部长度较小即8B</li><li>支持一对一、一对多、多对一和多对多的交互通信</li></ul><h4 id="2-首部格式："><a href="#2-首部格式：" class="headerlink" title="2. 首部格式："></a>2. 首部格式：</h4><p>  <img src="https://cdn.jsdelivr.net/gh/laityy/cdn/source/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/laityy/photo/images/udp.jpg" alt="UDP首部"></p><ul><li>均为2B 共8B</li><li>若有数据部分则加在首部格式后，且大小为4B整数倍</li><li>校验和：第四个字段（协议字段）为17.</li></ul><h4 id="3-UDP校验"><a href="#3-UDP校验" class="headerlink" title="3. UDP校验:"></a>3. UDP校验:</h4><ul><li><p>在计算校验和时出现伪首部（伪IP首部），不参与数据传输过程</p></li><li><p>过程用二进制反码运算求和验证</p></li></ul><h3 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h3><h4 id="1-特点："><a href="#1-特点：" class="headerlink" title="1. 特点："></a>1. 特点：</h4><ul><li><strong>面向连接</strong>（虚连接非物理连接）（每发送一个报文段，都需要对方返回一个确认报文段）</li><li><strong>点对点传输</strong></li><li><strong>可靠交付</strong>，有序传输</li><li><strong>全双工</strong>通信</li><li><strong>面向字节流</strong><ul><li>发送缓存：准备发送的数据&amp;已发送但未收到确认的数据</li><li>接收缓存：按序到达但尚未被接受应用程序读取的数据&amp;不按序到达的数据</li><li>流：流入到进程或从进程流出的<strong>字节序列</strong>，即将多个字节组成一个报文段。</li></ul></li></ul><h4 id="2-报文段格式"><a href="#2-报文段格式" class="headerlink" title="2. 报文段格式"></a>2. 报文段格式</h4>  <img src="https://cdn.jsdelivr.net/gh/laityy/cdn/source/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/laityy/photo/images/TCP1.png"><h5 id="首部格式"><a href="#首部格式" class="headerlink" title="首部格式"></a>首部格式</h5><ol><li><p>序号：在TCP连接中传输的字节流的每一个字节都按顺序编号，本字段表示本报文段所发送数据的<strong>第一个字节的序号</strong>。</p></li><li><p>确认号：<strong>期望收到对方</strong>下一个报文段的第一个数据字节的序号；若确认号为N，则证明到序号N-1为止的所有数据都已正确收到。</p></li><li><p>数据偏移（<strong>首部长度</strong>）4bit：TCP报文段的数据起始处距离TCP报文段的起始处有多远，单位4B。</p><img src="https://cdn.jsdelivr.net/gh/laityy/cdn/source/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/laityy/photo/images/TCP2.png"></li><li><p>6个控制位：</p><ul><li><strong>紧急位URG</strong>（优先发送）：URG=1，表明此报文段中有紧急数据，是最高优先级的数据，应尽快传送，不用在缓存里排队，配合紧急指针字段使用。</li><li><strong>确认位ACK</strong>：ACK=1时有效,在连接建立后，所有传输的报文段都必须把ACK置为1。</li><li><strong>推送位PSH</strong>（优先接收）：PSH=1时，接受方尽快交付接受应用进程，不再等到缓存填满再向上交付。和紧急位作用类似，不过PSH在接收方。</li><li>复位RST：RST=1时，表明TCP连接中出现严重差错，必须释放连接，然后再重新建立传输连接。</li><li><strong>同步位SYN</strong>：SYN=1，表明是一个连接请求/连接接受报文；<strong>握手过程中使用到</strong>。</li><li><strong>终止位FIN</strong>：FIN=1，表明此报文段发送方数据已发完，要求释放链接；<strong>挥手中用到</strong> 。</li></ul></li><li><p>窗口：指发送本报文段的一方的接受窗口，即现在允许发送方能发送的数据最大量（0–65535）。 </p></li><li><p>检验和：和UDP类似，检验首部+数据，检验时要加上12B的伪首部，第四个字段（协议字段）为6.</p></li><li><p>紧急指针：URG=1时有效，指出本报文段中紧急数据的字节数。</p></li><li><p>选项：最大报文长度MSS，窗口扩大</p></li><li><p>填充：需要将报文段填充为4B的整数倍。</p></li></ol><h4 id="3-可靠传输"><a href="#3-可靠传输" class="headerlink" title="3. 可靠传输"></a>3. 可靠传输</h4><ul><li>可靠：保证接受方进程从缓存区读出的字节流与发送方发出的字节流是完全一样的</li><li>为实现可靠传输所提供的机制：<ol><li>校验：与UDP校验一样，在发送方和接受方都添加伪首部，通过二进制反码求和来判断。</li><li>序号：由于TCP面向字节流；一个字节占一个序号，<strong>序号字段seq</strong>指一个<strong>报文段</strong>第一个字节的序号。</li><li>确认：接受方每收到一个报文段都会返回一个确认报文段（报文段中<strong>确认号字段ack</strong>为期待收到的下一个字节，告知发送方下一个应该发送的报文段）；TCP默认使用累计确认机制，即TCP只确认数据流当中自第一个丢失为止的字节。</li><li>重传：TCP的发送方在<strong>规定的时间</strong>（重传时间）内没有收到确认就要重传已发送的报文段，即<strong>超时重传</strong>。</li></ol><ul><li>重传时间：制定过短会让传播时间较长的报文段很容易就超出时间；过长会导致网络空闲时间较长，降低网络利用率；</li><li>TCP采用自适应算法，动态改变重传时间RTTs（加权平均往返时间）；取决于每一个报文段的RTT（往返时间）；</li></ul><ol start="5"><li><strong>快速重传</strong>：基于冗余ACK（确认）：每当比期望序号大的失序报文段到达时，发送一个冗余ACK，指明下一个期待字节的序号；</li></ol></li></ul><h4 id="4-连接管理"><a href="#4-连接管理" class="headerlink" title="4. 连接管理"></a>4. 连接管理</h4><ul><li><p>连接传输三个阶段：<br> 连接建立（<strong>三次握手</strong>）—数据传送—连接释放（<strong>四次挥手</strong>）（虚连接）</p></li><li><p>三次握手</p><ul><li><p>1：客户端发送连接<strong>请求报文段</strong>，无应用层数据； </p><ul><li>报文段中重要字段：SYN（同步位）=1，seq（序号–每次发送报文段都会有）=x（随机）</li></ul></li><li><p>2：服务器端为该TCP连接分配资源即”缓存和变量”，并向客户端发送<strong>确认报文段</strong>，允许连接，无应用层数据； </p><ul><li>SYN=1，ACK（确认位）=1，seq=y（随机），ack（确认号；与ACK同步使用）=x+1</li></ul></li><li><p>3：客户端位该TCP连接分配缓存和变量，并向服务器返回确认的确认，可以携带数据； </p><ul><li>SYN=0（只在发送连接请求和发送确认连接请求为1）ACK=1，seq=x+1，ack=y+1</li></ul></li></ul></li><li><p>四次挥手；</p><ul><li>1：客户端发送连接<strong>释放报文段</strong>，停止发送数据，主动关闭TCP连接；<ul><li>报文段重要字段：FIN（结束位–请求释放连接时会有）=1，seq=u</li></ul></li><li>2：服务器端回送一个<strong>确认报文段</strong>，客户到服务器这个方向的连接就释放了—半关闭状态；<ul><li>ACK=1，seq=v，ack=u+1</li></ul></li><li>3：客户端收到2过程服务器报文段不会给予回复，待服务器发送完数据后，就发出连接释放报文段，主动关闭TCP连接；<ul><li>FIN=1，ACK=1，seq=w，ack=u+1  </li></ul></li><li>4：客户端回送一个<strong>确认报文段</strong>，再等待时间等待计时器设置的2MSL（最长报文段寿命），连接彻底关闭；<ul><li>2MSL：确认客户端发送的确认报文段是否被服务器端接受，若超出2MSl则重传。假若不等待该时间，则会导致客户发送完报文段后立即关闭连接，若报文段丢失，则服务器一直发送连接释放报文段。该连接就无法关闭。</li><li>ACK=1，seq=u+1，ack=w+1</li></ul></li></ul></li></ul><h4 id="5-流量控制"><a href="#5-流量控制" class="headerlink" title="5. 流量控制"></a>5. 流量控制</h4><ul><li><p>作用：控制发送方发送速度，确保接受方能正常接受；</p></li><li><p>TCP利用<strong>滑动窗口</strong>实现流量控制；</p></li><li><p>在通信过程中，接收方根据自己<strong>接受缓存的大小</strong>，动态调整发送方窗口大小，即<strong>接受窗口rwnd</strong>（单位bit）（接受方设置确认报文段的<strong>窗口字段</strong>来将rwnd通知给发送方），发送方的<strong>发送窗口取接受窗口rwnd和拥塞窗口cwnd的最小值</strong>；</p></li><li><p>举例：</p><p><img src="https://cdn.jsdelivr.net/gh/laityy/cdn/source/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/laityy/photo/images/TCP%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6.jpg" alt="tcp流量控制"></p></li><li><p>每个确认报文段中rwnd都会重置之前的窗口大小，即通过发送累计确认的报文段（中的rwnd）动态改变接受窗口大小，从而达到流量控制；</p></li></ul><h4 id="6-拥塞控制"><a href="#6-拥塞控制" class="headerlink" title="6. 拥塞控制"></a>6. 拥塞控制</h4><ul><li><p>出现拥塞的条件：对资源需求的中和&gt;可用资源</p></li><li><p>作用：防止过多的数据注入到网络中。（<strong>全局性</strong>）</p></li><li><p>与流量控制<strong>同异</strong>：</p><ul><li>均减缓发送方发送速率；</li><li>流量控制点对点控制，是由于发送太快导致<strong>接受不过来</strong>。拥塞控制是由于全局性发生网络堵塞，导致接受方<strong>迟迟接受不到</strong>数据。</li></ul></li><li><p>拥塞控制四种算法：</p><ul><li>两个概念：<ul><li>接受窗口rwnd：<strong>接收方</strong>根据接受缓存设置的值，并告知发送方，反映接收方容量。</li><li>拥塞窗口cwnd：<strong>发送方</strong>根据自己估算的网络拥塞程度而设置的窗口值，反映网络当前容量。</li></ul></li><li>慢开始&amp;拥塞避免：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/laityy/cdn/source/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/laityy/photo/images/%E6%85%A2%E5%BC%80%E5%A7%8B%E6%8B%A5%E5%A1%9E%E9%81%BF%E5%85%8D.jpg" alt="慢开始拥塞避免机制"></p><ul><li>快重传&amp;快恢复：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/laityy/cdn/source/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/laityy/photo/images/%E5%BF%AB%E9%87%8D%E4%BC%A0%E5%BF%AB%E6%81%A2%E5%A4%8D.jpg" alt="快重传快恢复机制"></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客魔改历程</title>
      <link href="/posts/60707.html"/>
      <url>/posts/60707.html</url>
      
        <content type="html"><![CDATA[<h2 id="matery主题魔改记录"><a href="#matery主题魔改记录" class="headerlink" title="matery主题魔改记录"></a>matery主题魔改记录</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>第一次学着搭博客，起初毫无头绪也没有源码基础，跟着B站上的视频部署了hexo环境，安装了hexo默认主题，打开自己做好的博客的那一刻的成就感也确实成为了现在我想了解前端的动力之一，后面阴差阳错的接触到了matery这款主题，这款主题相对复杂一些，魔改过程也比我想的要困难很多（因为丝毫不懂CSS，JS等前端语言），所有的一切都只能百度谷歌。下面记录一下主要的魔改过程吧。</p><h3 id="一：一些特效插件"><a href="#一：一些特效插件" class="headerlink" title="一：一些特效插件"></a>一：一些特效插件</h3><p>我安装的一些主题特效插件都是跟着网上教程弄的，记录一些我觉得比较好的插件</p><ol><li>背景动态线条:可以自定义线条数量颜色以及透明度，填充背景使其视觉效果更饱满</li><li>鼠标跟随星星和点击界面显示爱心和文字</li><li>其他的个人觉得在移动端上显示有点遮挡内容</li></ol><h3 id="二：medias个性化"><a href="#二：medias个性化" class="headerlink" title="二：medias个性化"></a>二：medias个性化</h3><p>medias文件夹里面是个人头像，网站主页，文章主页等博客图片的资源文件，可以随意替换，个人推荐很好的壁纸网站<a href="https://wallhaven.cc/" target="_blank" rel="noopener">wallhaven</a>，国内访问可能有点慢</p><ol><li>下载图片后，直接替换medias里的文件夹里的图片就好，注意图片名称改为与原始图片相同,若图片较大，可适当不失真压缩</li><li>网站logo采用png格式，故可以使用ps自己制作透明logo 同时也有个制作logo的网站<a href="http://www.uugai.com/" target="_blank" rel="noopener">U钙网</a>。</li><li>音乐配置方面，可以直接修改配置文件里的musics，添加音乐平台和歌单地址就好（只能在线播放），还可以下载音乐文件到<code>matery\source\medias\music</code>,还需自己找歌曲图片，最后配置<code>musics.json</code>文件。</li></ol><h3 id="三：加快网页加载速度"><a href="#三：加快网页加载速度" class="headerlink" title="三：加快网页加载速度"></a>三：加快网页加载速度</h3><ol><li>jsd的CDN加速，js，css文件都使用CDN加载</li><li>博客图片采用图床，就是云端托管图片，再用jsd引用，本质也是jsd加速</li><li>图片懒加载，安装相应插件，可自定义loading…加载图</li><li>网页部署到coding或gitee，coding服务器也在海外，效果不太明显，gitee不能自定义域名，速度很快，另外也可采用阿里云和腾讯云的网页托管服务</li></ol><h3 id="四：字体颜色大小和界面颜色"><a href="#四：字体颜色大小和界面颜色" class="headerlink" title="四：字体颜色大小和界面颜色"></a>四：字体颜色大小和界面颜色</h3><ol><li><code>matery.css</code>文件中可随意修改相关颜色，包括nav的渐变色,font,background的颜色</li></ol><h3 id="五：完善博客常访问的网站"><a href="#五：完善博客常访问的网站" class="headerlink" title="五：完善博客常访问的网站"></a>五：完善博客常访问的网站</h3><ol><li><a href="www.wallhaven.cc">wallhaven</a></li></ol><p>图片分辨率很高，很适合做banner图，主要的壁纸都可从该网站上找</p><ol start="2"><li>图标库 [fontawesome] [icomoon] [iconfont]</li></ol><ol start="3"><li>CSDN 博客园等交流社区</li><li></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
